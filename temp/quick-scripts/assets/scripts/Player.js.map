{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","setInputControl","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","a","accLeft","d","accRight","KEY_UP","start","onLoad","jumpAction","node","runAction","xSpeed","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n      jumpHeight:0,\r\n      jumpDuration:0,\r\n      maxMoveSpeed:0,\r\n      accel:0,\r\n      jumpAudio: {\r\n        default: null,\r\n        url: cc.AudioClip\r\n    },\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    setJumpAction:function(){\r\n        var jumpUp=cc.moveBy(this.jumpDuration,cc.p(0,this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n       var jumpDown =cc.moveBy(this.jumpDuration,cc.p(0,-this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n       var callback = cc.callFunc(this.playJumpSound, this);\r\n       return cc.repeatForever(cc.sequence(jumpUp,jumpDown,callback));\r\n    },\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n    setInputControl: function () {\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n        // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event){\r\n            switch(event.keyCode) {\r\n                case cc.KEY.a:\r\n                    self.accLeft = true;\r\n                    break;\r\n                case cc.KEY.d:\r\n                    self.accRight = true;\r\n                    break;\r\n            }\r\n        });\r\n         // 松开按键时，停止向该方向的加速\r\n         cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event){\r\n            switch(event.keyCode) {\r\n                case cc.KEY.a:\r\n                    self.accLeft = false;\r\n                    break;\r\n                case cc.KEY.d:\r\n                    self.accRight = false;\r\n                    break;\r\n            }\r\n        });\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n// Player.js\r\nonLoad: function () {\r\n    // 初始化跳跃动作\r\n    this.jumpAction = this.setJumpAction();\r\n    this.node.runAction(this.jumpAction);\r\n    // 加速度方向开关\r\n    this.accLeft = false;\r\n    this.accRight = false;\r\n    // 主角当前水平方向速度\r\n    this.xSpeed = 0;\r\n\r\n    // 初始化键盘输入监听\r\n    this.setInputControl();\r\n},\r\n    // update (dt) {},\r\n    // Player.js\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n   \r\n    \r\n});\r\n"]}